@startuml subnet-0axx

component outbound #LightGreen

node "sub 0.a.0.*" as sub_0a0x #Yellow
node "sub 0.a.1.*" as sub_0a1x #Yellow
node "sub 0.a.2.*" as sub_0a2x #Yellow
node "sub 0.a.3.*" as sub_0a3x #Yellow

storage r1
storage r2
storage r3
storage r4
storage r5

hexagon "D(0.a.0.*)" as D_0a0x
hexagon "D(0.a.1.*)" as D_0a1x
hexagon "D(0.a.2.*)" as D_0a2x
hexagon "D(0.a.3.*)" as D_0a3x

hexagon back_all

' 0a1x -> 0a0xパケットが外に流出するのを防ぐ 
hexagon "M(0.a.*.*)" as M_0axx #LightBlue
' 0a0x -> outboundが無駄な部分に流れるのを防ぐ
hexagon "D(0.a.*.*)" as D_0axx #LightBlue
' 0a1x -> 0a0xパケットが無駄な部分に流れるのを防ぐ  
hexagon "M(0.a.0.*)" as M_0a0x #LightBlue
' 0a2x -> !(0a3x)のパケットが無駄な部分に流れるのを防ぐ
hexagon "D(0.a.3.*)" as D_0a3x_2 #LightBlue
' 0a2x -> 0a1xのパケットが無駄な部分に流れるのを防ぐ
hexagon "M(0.a.1.*)" as M_0a1x #LightBlue
' 0a3x -> 0a2xのパケットが無駄な部分に流れるのを防ぐ
hexagon "M(0.a.2.*)" as M_0a2x #LightBlue

outbound -- M_0axx


r1 "0" --> M_0axx
r1 "1" --> D_0a0x
r1 "2" --> D_0axx

M_0a1x -- D_0axx

r2 "0" --> M_0a1x
r2 "1" --> D_0a1x
r2 "2" --> M_0a0x

M_0a0x -- M_0a2x

r3 "0" --> M_0a2x
r3 "1" --> D_0a2x
r3 "2" --> D_0a3x_2

r4 "0" -- D_0a3x_2
r4 "1" --> D_0a3x
r4 "2" --> back_all

D_0a0x -- sub_0a0x
D_0a1x -- sub_0a1x
D_0a2x -- sub_0a2x
D_0a3x -- sub_0a3x

@enduml